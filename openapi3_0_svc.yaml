openapi: 3.0.1
info:
  title: Rvghipster 01 API
  description: Rvghipster 01 API documentation
  termsOfService: ''
  contact:
    name: ''
    url: ''
    email: 'email@email.de'
  license:
    name: unlicensed
    url: ''
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/admin/users/{login}:
    get:
      tags:
        - user-resource
      operationId: getUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            pattern: >-
              ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    put:
      tags:
        - user-resource
      operationId: updateUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            pattern: >-
              ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    delete:
      tags:
        - user-resource
      operationId: deleteUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            pattern: >-
              ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
            type: string
      responses:
        '200':
          description: OK
  /api/admin/users:
    get:
      tags:
        - user-resource
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUserDTO'
    put:
      tags:
        - user-resource
      operationId: updateUser_1
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    post:
      tags:
        - user-resource
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/register:
    post:
      tags:
        - account-resource
      operationId: registerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUserVM'
        required: true
      responses:
        '201':
          description: Created
  /api/authorities:
    get:
      tags:
        - authority-resource
      operationId: getAllAuthorities
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authority'
    post:
      tags:
        - authority-resource
      operationId: createAuthority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authority'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Authority'
  /api/account:
    get:
      tags:
        - account-resource
      operationId: getAccount
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    post:
      tags:
        - account-resource
      operationId: saveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
  /api/account/reset-password/init:
    post:
      tags:
        - account-resource
      operationId: requestPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
  /api/account/reset-password/finish:
    post:
      tags:
        - account-resource
      operationId: finishPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyAndPasswordVM'
        required: true
      responses:
        '200':
          description: OK
  /api/account/change-password:
    post:
      tags:
        - account-resource
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
        required: true
      responses:
        '200':
          description: OK
  /api/users:
    get:
      tags:
        - public-user-resource
      operationId: getAllPublicUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
  /api/authorities/{id}:
    get:
      tags:
        - authority-resource
      operationId: getAuthority
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Authority'
    delete:
      tags:
        - authority-resource
      operationId: deleteAuthority
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/authenticate:
    get:
      tags:
        - account-resource
      operationId: isAuthenticated
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/activate:
    get:
      tags:
        - account-resource
      operationId: activateAccount
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/account/sessions:
    get:
      tags:
        - account-resource
      operationId: getCurrentSessions
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersistentToken'
  /api/account/sessions/{series}:
    delete:
      tags:
        - account-resource
      operationId: invalidateSession
      parameters:
        - name: series
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
components:
  schemas:
    AdminUserDTO:
      required:
        - login
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          maxLength: 50
          minLength: 1
          pattern: >-
            ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
    ManagedUserVM:
      required:
        - login
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          maxLength: 50
          minLength: 1
          pattern: >-
            ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
        password:
          maxLength: 100
          minLength: 4
          type: string
    Authority:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 0
          type: string
    User:
      required:
        - activated
        - login
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        login:
          maxLength: 50
          minLength: 1
          pattern: >-
            ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        resetDate:
          type: string
          format: date-time
    KeyAndPasswordVM:
      type: object
      properties:
        key:
          type: string
        newPassword:
          type: string
    PasswordChangeDTO:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
    PersistentToken:
      type: object
      properties:
        series:
          type: string
        tokenDate:
          type: string
          format: date
        ipAddress:
          maxLength: 39
          minLength: 0
          type: string
        userAgent:
          type: string
